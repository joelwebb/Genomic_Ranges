getwd()
read.table("snp_position.txt", fill = TRUE) -> Snplist # create a variable titled Snplist for our data
Tabbed_snp<-read.delim("snp_position.txt",header=T,stringsAsFactors = F)
read.table("fang_et_al_genotypes.txt", fill = TRUE) -> Fang_genotypes # create a variable titled Fang_genotypes
Snplist
Fang_genotypes
names(Tabbed_snp)[1]<-paste("SNP_ID")
names(Tabbed_snp)[3]<-paste("Chr")
names(Tabbed_snp)[4]<-paste("Position")
Tabbed_snp2 <- data.frame(Tabbed_snp$SNP_ID, Snplist$Chr, Snplist$Position)
names(Tabbed_snp)[1]<-paste("SNP_ID")
names(Tabbed_snp)[3]<-paste("Chr")
names(Tabbed_snp)[4]<-paste("Position")
Tabbed_snp2 <- data.frame(Tabbed_snp$SNP_ID, Snplist$Chr, Snplist$Position)
View(Tabbed_snp)
Tabbed_snp<-read.delim("snp_position.txt",header=T,stringsAsFactors = F)
read.table("snp_position.txt", fill = TRUE) -> Snplist # create a variable titled Snplist for our data
View(Tabbed_snp)
read.table("snp_position.txt", fill = TRUE) -> Snplist # create a variable titled Snplist for our data
idz <- as.data.frame(ifelse(teo_decreasing_snps == "?/?", "-/-",teo_decreasing_snps))
read.table("snp_position.txt", fill = TRUE) -> Snplist # create a variable titled Snplist for our data
setwd("C:/Users/Joe/Desktop/R_Assignment") #Change wd to C:/Users/Joe/Desktop/R_Assignment
read.table("snp_position.txt", fill = TRUE) -> Snplist # create a variable titled Snplist for our data
Tabbed_snp <- read.delim("snp_position.txt",header=T,stringsAsFactors = F)
read.table("fang_et_al_genotypes.txt", fill = TRUE) -> Fang_genotypes # create a variable titled Fang_genotypes
View(Tabbed_snp)
View(Snplist)
Fang_new_SNP_Names <- data.frame(Fang_genotypes[1,])
# get column names
data.frame(colnames(Fang_genotypes)) -> Fang_column_Names
transposed_new_SNP_names <- t(Fang_new_SNP_Names)
#Add in name to all columns in fang et all genotypes
colnames(Fang_genotypes) <- transposed_new_SNP_names
names(Fang_genotypes)[1]<-paste("SNP_ID")
names(Fang_genotypes)[2]<-paste("Gene")
#Make a new snp information file that we want to join
names(Tabbed_snp)[1]<-paste("SNP_ID")
names(Tabbed_snp)[3]<-paste("Chr")
names(Tabbed_snp)[4]<-paste("Position")
Tabbed_snp2 <- data.frame(Tabbed_snp$SNP_ID, Tabbed_snp$Chr, Tabbed_snp$Position)
geno <- Fang_genotypes
maize_geno <- geno[(geno$Group == "ZMMIL")|(geno$Group == "ZMMLR")|(geno$Group =="ZMMMR"),]
teo_geno<- geno[(geno$Group == "ZMPBA")|(geno$Group == "ZMPIL")|(geno$Group == "ZMPJA"),]
teo_merged <- merge(Tabbed_snp, teo_Transposed_Genotypes, by.x = "SNP_ID",by.y = "row.names")
cut_maize<-maize_merged[,c(1,3,4,16:1588)]
teo_merged <- merge(Tabbed_snp, teo_Transposed_Genotypes, by.x = "SNP_ID",by.y = "row.names")
as.data.frame(t(maize_geno)) -> maize_Transposed_Genotypes
as.data.frame(t(teo_geno)) -> teo_Transposed_Genotypes
teo_merged <- merge(Tabbed_snp, teo_Transposed_Genotypes, by.x = "SNP_ID",by.y = "row.names")
maize_merged <-merge(Tabbed_snp, maize_Transposed_Genotypes, by.x = "SNP_ID",by.y = "row.names")
cut_maize<-maize_merged[,c(1,3,4,16:1588)]
cut_teo<-teo_merged[,c(1,3,4,16:990)]
cut_maize[order(as.numeric(as.character(cut_maize$Position)),decreasing = T),] -> maize_decreasing_snps
cut_maize[order(as.numeric(as.character(cut_maize$Position))),] -> maize_increasing_snps
cut_teo[order(as.numeric(as.character(cut_teo$Position))),] -> teo_increasing_snps
cut_teo[order(as.numeric(as.character(cut_teo$Position)),decreasing=T),] -> teo_decreasing_snps
View(teo_decreasing_snps)
test = (as.character(teo_decreasing_snps =="?/?"] <- "-/-")
teo_decreasing_snps[teo_decreasing_snps=="?/?"] <- "-/-"
test = (teo_decreasing_snps == as.character("?/?") <- "-/-")
cut_teo[order(as.numeric(as.character(cut_teo$Position)),decreasing=T),] -> teo_decreasing_snps
View(teo_decreasing_snps)
idz <- teo_decreasing_snps[teo_decreasing_snps == "?/?"] = NA
idz <- (teo_decreasing_snps[teo_decreasing_snps == "?/?"] = NA)
idz <- (teo_decreasing_snps[which(teo_decreasing_snps == "?/?")] = NA)
idz <- (data.frame(teo_decreasing_snps[which(teo_decreasing_snps == "?/?")] = NA))
idz <- (data.frame(teo_decreasing_snps[teo_decreasing_snps == "?/?"] = NA))
str(teo_decreasing_snps)
write.csv(teo_decreasing_snps, "teo_decreasing_snps.csv")
Replaced_teo <- read.csv("teo_decreasing_snps2.csv")
Replaced_teo <- read.csv("teo_decreasing_snps_edited.csv")
write.csv(maize_decreasing_snps, "maize_decreasing_snps.csv")
for (i in 1:ncol(maize_decreasing_snps)){
maize_decreasing_snps[which(maize_decreasing_snps[,i]=="?/?"),columnIndex]<-"-/-"
FinalData[which(is.na(FinalData[,columnIndex])),columnIndex]<-"-/-"}
ncol(maize_decreasing_snps)
for (i in 1:ncol(maize_decreasing_snps)){
maize_decreasing_snps[which(maize_decreasing_snps[,i]=="?/?"),
columnIndex]<-"-/-"
FinalData[which(is.na(FinalData[,columnIndex])),columnIndex]<-"-/-"}
FinalData[which(is.na(FinalData[,columnIndex])),columnIndex] }
for (i in 1:ncol(maize_decreasing_snps)){
maize_decreasing_snps[which(maize_decreasing_snps[,i]=="?/?"),
columnIndex]<-"-/-"
FinalData[which(is.na(FinalData[,columnIndex])),columnIndex] }
maize_decreasing_snps[which(maize_decreasing_snps[,i]=="?/?"), columnIndex]<-"-/-"
maize_decreasing_snps[ maize_decreasing_snps == "?/?" ] = NA
View(maize_decreasing_snps)
write.csv(maize_decreasing_snps, "maize_decreasing_snps.csv")
Replaced_maize <- read.csv("maize_decreasing_snps_edited.csv")
dir.create("maize_chr_increasing")
dir.create("maize_chr_decreasing")
dir.create("teosinte_chr_increasing")
dir.create("teosinte_chr_decreasing")
for (i in 1:10) {
maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop, sprintf("maize_chr_increasing/maize_chromosome_%d_increasing_snps", i), row.names = F) }
for (i in 1:10) { maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop, sprintf("maize_chr_increasing/maize_chromosome_%d_increasing_snps", i), row.names = F) }
for (i in 1:10) { maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop,sprintf("maize_chr_increasing/maize_chromosome_%d_increasing_snps", i), row.names = F) }
for (i in 1:10) { maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop,"maize_chromosome_%d.csv", i)})
for (i in 1:10) { maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop,"maize_chromosome_%d.csv")})
for (i in 1:10) { maize_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop,sprintf('maize_chromosome_%d.csv', i))})
for (i in 1:10) { maize_chr_loop <- maize_increasing_snps[maize_increasing_snps$Chromosome == i,] write.csv(maize_chr_loop, sprintf("maize_chr_increasing/maize_chromosome_%d_increasing_snps", i), row.names = F) }
ggplot(teo_decreasing_snps) + geom_point(aes(x = teo_decreasing_snps$Chr)
ggplot(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr)
ggplot(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr))
ggplot2(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr))
library(ggplot)
library(ggplot2)
ggplot2(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr))
ggplot(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr))
ggplot(teo_decreasing_snps) + geom_bar(aes(x = teo_decreasing_snps$Chr)) -> Teo_plot_by_Chromosome
maize_plot_by_Chromosome <- ggplot(maize_decreasing_snps) + geom_bar(aes(x = maize_decreasing_snps$Chr))
maize_plot_by_Chromosome
homozygotes <- c("A/A", "C/C", "G/G", "T/T")
Homozygous_Teo <- teo_decreasing_snps[teo_decreasing_snps == homozygotes] = TRUE
teo_decreasing_snps[teo_decreasing_snps == homozygotes] = TRUE
Homozygous_Teo <- teo_decreasing_snps[homozygotes] = TRUE
Homozygous_Teo <- teo_decreasing_snps(homozygotes) = TRUE
teo_decreasing_snps(homozygotes) = TRUE
View(teo_decreasing_snps)
teo_decreasing_snps
Homozygous_Teo <- gsub(teo_decreasing_snps, homoztgotes, TRUE)
Homozygous_Teo <- gsub(teo_decreasing_snps, homozygotes, TRUE)
Homozygous_Teo <- gsub(homozygotes, TRUE, teo_decreasing_snps)
Homozygous_Teo <- data.frame(gsub(homozygotes, TRUE, teo_decreasing_snps))
Homozygous_Teo <- data.frame(gsub(homozygotes, "TRUE", teo_decreasing_snps))
View(Homozygous_Teo)
Homozygous_Teo <- data.frame(gsub("T/T", "TRUE", teo_decreasing_snps))
Homozygous_Teo <- gsub("T/T", "TRUE", teo_decreasing_snps)
Homozygous_Teo <- sub("T/T", "TRUE", teo_decreasing_snps, perl=FALSE)
Homozygous_maize <- grep("T/T",maize_decreasing_snps)
teo_decreasing_snps_colum75 <- gsub("T/T", "TRUE", teo_decreasing_snps$`75`, perl=FALSE)
teo_decreasing_snps$Homoztgous <- gsub("T/T", "TRUE", teo_decreasing_snps$`75`, perl=FALSE)
teo_decreasing_snps <- data.frame(lapply(teo_decreasing_snps, as.character), stringsAsFactors=FALSE)
teo_decreasing_snps[teo_decreasing_snps=="T/T"] <- "TRUE"
View(teo_decreasing_snps)
teo_decreasing_snps[teo_decreasing_snps==homozygotes] <- "TRUE"
View(teo_decreasing_snps)
teo_decreasing_snps[teo_decreasing_snps=="A/A"] <- "TRUE"
teo_decreasing_snps[teo_decreasing_snps=="G/G"] <- "TRUE"
teo_decreasing_snps[teo_decreasing_snps=="C/C"] <- "TRUE"
idx <- isTRUE(teo_decreasing_snps)
idx <- data.frame(isTRUE(teo_decreasing_snps))
View(idx)
teo_decreasing_snps[teo_decreasing_snps=="A/C"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="A/T"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="A/G"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="C/A"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="C/G"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="C/T"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="T/A"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="T/C"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="T/G"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="G/A"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="G/T"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="G/C"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps=="NA"] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps==NA] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps==<NA>] <- "FALSE"
teo_decreasing_snps[teo_decreasing_snps== <NA>] <- "FALSE"
teo_decreasing_snps[which(is.na(teo_decreasing_snps)),] <- "FALSE"
Test_teo <- ifelse(teo_decreasing_snps[which(is.na(teo_decreasing_snps))==TRUE,], 1,0)
Test_teo <- ifelse(teo_decreasing_snps==TRUE, 1,0)
View(Test_teo)
is.na(teo_decreasing_snps) <- 0)
is.na(teo_decreasing_snps) <- "0")
Test_teo2 <- is.na(teo_decreasing_snps)
View(Test_teo2)
Test_maize2 <- is.na(maize_decreasing_snps)
View(Test_maize2)
Test_maize3 <- ifelse(Test_maize2==FALSE,maize_decreasing_snps,0)
maize_decreasing_snps[which(is.na(maize_decreasing_snps)),] <- "FALSE"
Test_maize_Homozygotes <- ifelse(maize_decreasing_snps==TRUE,1,0)
View(Test_maize_Homozygotes)
ggplot(teo_decreasing_snps) + geom_point(aes(x =teo_decreasing_snps$Position, y = teo_decreasing_snps$X75)) -> Joe_graph
Joe_graph
ggplot(teo_decreasing_snps) + geom_bar(aes(x =teo_decreasing_snps$Position)) -> Joe_graph
Joe_graph
ggplot(Tabbed_snp) + geom_bar(aes(x =Tabbed_snp$SNP_ID)) -> Joe_graph
Joe_graph
ggplot(Tabbed_snp) + geom_bar(aes(x =Tabbed_snp$Chr==3)) -> Joe_graph
Joe_graph
source("http://bioconductor.org/bioclite.R")
source("http://bioconductor.org/bioclite.R")
source('~/.active-rstudio-document')
source("http://bioconductor.org/bioclite.R")
source("https://bioconductor.org/biocLite.R")
bioclite()
biocLite()
biocLite("GenomicRanges")
library(IRanges)
rng1 <- IRanges(start = 4, end = 13)
rng1
rng2 <- IRanges(start = 4, width = 3)
set.seed(0)
library(IRanges)
set.seed(0)
alns <- IRanges(start=sample(seq_len(50),5), width=5)
head(alns)
reduce(alns)
gaps(alns)
a <- IRanges(start=4, end=13)
b<- IRanges(start=12, end=17)
a
b
setdiff(a,b)
qry <- IRanges(start=c(1,26,19,11,21,7), end=c(16,30,19,15,24,8), names=letters[1:6])
class(hts)
hts <- findOverlaps(qry,subject) #query always comes first
hts <- findOverlaps(qry, subject) #query always comes first
qry <- IRanges(start=c(1,26,19,11,21,7), end=c(16,30,19,15,24,8), names=letters[1:6])
subject <- IRanges(start=c(1,19,10),end=c(5,29,16), names=letters[1:3])
hts <- findOverlaps(qry, subject) #query always comes first
class(hts)
hts
hts_within <- findOverlaps(qry, subject,type="within")
hts_within
findOverlaps(qry, subject, select="arbitrary")
nearest(qry)
precede(qry)
follow(qry)
nearest()
help("nearest")
library(GenomicRanges)
gr <- GRanges(seqnames = C("chr1", "chr1", "chr2", "chr3"), ranges=IRanges(start=5:8, width = 10), strand = c("+","-","-","+"), gc=round(runif(4),3),seqlengths=seqlens)
gr <- GRanges(seqname= C("chr1", "chr1", "chr2", "chr3"), ranges=IRanges(start=5:8, width = 10), strand = c("+","-","-","+"), gc=round(runif(4),3),seqlengths=seqlens)
gr <- GRanges(seqname=c("chr1", "chr1", "chr2", "chr3"), ranges=IRanges(start=5:8, width = 10), strand = c("+","-","-","+"), gc=round(runif(4),3),seqlengths=seqlens)
seqlens <- c(chr1=152, chr2=178, chr3=998, chr4=772)
gr <- GRanges(seqname=c("chr1", "chr1", "chr2", "chr3"), ranges=IRanges(start=5:8, width = 10), strand = c("+","-","-","+"), gc=round(runif(4),3),seqlengths=seqlens)
gr
mean(gr)
means(gr)
split(gr, seqnames(gr))
library(Bioclite)
install.packages(BioClite)
install.packages("BioClite")
install.packages("biocLite")
install.packages("biocLite")
install.packages("biocLite")
library(biocLite)
library("biocLite")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("GenomicRanges")
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
library(import)
biocLite('biomartr')
library(BiocInstaller)
biocLite("GenomicFeatures")
getwd()
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
library(import)
library('import')
library(rtracklayer)
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
biocLite("TxDb.Mmusculus.UCSC.mm10.ensGene")
collapsed_exons <- reduce(exons(txdb), ignore.strand=TRUE)
library(transcriptDb)
biocLite("transcriptDb")
summary(width(dbsnp137))
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
getwd()
setwd("C:/Users/Joe/Desktop/Genomic_ranges")
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed.gz")
biocLite()
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed")
getwd()
setwd("C:/Users/Joe/Desktop/Genomic_ranges")
source("http://bioconductor.org/biocLite.R")
biocLite()
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed")
dbsnp137 <- import("mm10_snp137_chr1_trunc.bed")
dbsnp137 <- import("test.bed.gz")
